---
security_repo_base_url: "security.ubuntu.com/ubuntu"

security_repositories:
  vendor_base:
    uri: "http://{{ security_repo_base_url }}"
    suffix: "-security"
    state: "present"
    components:
      - main
      - restricted
      - universe
      - multiverse

standard_repo_base_url: "mirrors.edge.kernel.org/ubuntu"
#standard_repo_base_url: "ar.archive.ubuntu.com/ubuntu"

standard_repositories:
  vendor_base:
    uri: "http://{{ standard_repo_base_url }}"
    suffix: ""
    state: "present"
    components:
      - main
      - restricted
      - universe
      - multiverse
  vendor_security:
    uri: "http://{{ standard_repo_base_url }}"
    suffix: "-security"
    state: "present"
    components:
      - main
      - restricted
      - universe
      - multiverse
  vendor_updates:
    uri: "http://{{ standard_repo_base_url }}"
    suffix: "-updates"
    state: "present"
    components:
      - main
      - restricted
      - universe
      - multiverse
  vendor_backports:
    uri: "http://{{ standard_repo_base_url }}"
    suffix: "-backports"
    state: "present"
    components:
      - main
      - restricted
      - universe
      - multiverse
  vendor_partner:
    uri: "http://archive.canonical.com/ubuntu"
    suffix: ""
    state: "present"
    components:
      - partner
  vendor_extras:
    uri: "http://extras.ubuntu.com/ubuntu"
    suffix: ""
    state: "absent"
    components:
      - main

oracle_java_repository:
  vendor_java:
    uri: "http://ppa.launchpad.net/webupd8team/java/ubuntu"
    suffix: ""
    state: "absent"
    components:
      - main


apt_repositories:
  - "{{ standard_repositories }}"
  - "{{ security_repositories }}"

devops_user_name: 'vagrant'
devops_user_uid: 1000

tinyproxy_listen_ip: '<DIRECCION_IP_INTERFAZ_DE_RED>'
tinyproxy_listen_port: '8888'

tinyproxy_no_upstream:
  - ".dominio.local.tld"
  - "192.168.11.0/24"
  - "192.168.20.0/22"
  - "."

tinyproxy_upstream: ''
#tinyproxy_upstream:
# - { protocol: http, proxy: DIRECCION_IP_PROXY_CORPORATIVO:PUERTO_PROXY_CORPORATIVO, destination: '' } # default upstream corporate proxy
tinyproxy_min_spare_servers: '5'
tinyproxy_max_spare_servers: '20'

tinyproxy_allow:
  - '<MI_DIRECCION_IP>'
  - '192.168.11.0/24'
  - '192.168.20.0/22'


organizacion: "<MI_ORGANIZACION>"

all_proxy: 'http://<DIRECCION_IP_INTERFAZ_DE_RED>:8888'
http_proxy: '{{ all_proxy }}'
https_proxy: '{{ all_proxy }}'
ftp_proxy: '{{ all_proxy }}'
no_proxy: '10.,192.168.,wpad,127.0.0.1,localhost,.dominio.local.tld'
soap_use_proxy: 'on'


docker__env_http_proxy: "{{ http_proxy }}"
docker__env_https_proxy: "{{ https_proxy }}"
docker__env_no_proxy: "{{ no_proxy }}"


# /etc/fuse.conf
fuse_mount_max: 'default'
# Allow non-root users to specify the allow_other or allow_root mount options.
fuse_user_allow_other: true
fuse_restrict_access: False

# FIXME: cuando .ansible_facts.ansible_devices.sda.rotational == 0 usar swappiness 1, sino 10
# ansible localhost -i inventario/ -m setup | sed -e  "s/localhost | SUCCESS => //"  | jq ".ansible_facts.ansible_devices.sda.rotational"
swappiness: "10"
# FIXME: la maxima version posible en ubuntu 18.04
#ansible_version_deseada: ''
ansible_version_deseada: '4.10.0'


# Config de OCS-Inventory: si ocs_server es vacio, no se instala
ocs_server: ''
ocs_tag: ''
ocs_agent_version: '2.8.1'
ocs_ssl: true


workstation_download_url: https://drive.usercontent.google.com/download?id=1BLDcQcJkmRvPx4yJKFgoXOl_v1jmrADv&confirm=xxx

